version: "3"
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
  redis:
    image: redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
  postgres:
    image: postgres
    restart: always
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_PASSWORD=example
      - POSTGRES_DB=seckill
    volumes:
      - postgres_data:/var/lib/postgresql/data
  backend:
    build: ./backend/
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:7000"
    volumes:
      - ./backend:/code
    ports:
      - "7000:7000"
    environment:
      - POSTGRES_NAME=seckill
      - POSTGRES_PASSWORD=example
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
      - KAFKA_HOST=kafka
    depends_on:
      - postgres
      - kafka
      - redis
  backend_kafka_consumer:
    build: ./backend_kafka_consumer/
    command: python kafka_consumer.py
    volumes:
      - ./backend_kafka_consumer:/code
    environment:
      - POSTGRES_NAME=seckill
      - POSTGRES_PASSWORD=example
      - POSTGRES_HOST=postgres
      - KAFKA_HOST=kafka
    restart: always
    depends_on:
      - kafka
  frontend:
    build: ./frontend/
    environment:
      - BACKEND_HOST=backend
    ports:
      - "3000:3000"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
